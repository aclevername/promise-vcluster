#!/usr/bin/env sh

set -x
#
# Read current values from the provided resource request
export name="$(yq eval '.metadata.name' /input/object.yaml)"

helm template $name vcluster \
  --values /tmp/transfer/vcluster.yaml \
  --repo https://charts.loft.sh \
  --namespace $name \
  --repository-config='' > /output/vcluster.yaml

cat > /output/namespace.yaml <<EOF
apiVersion: v1
kind: Namespace
metadata:
  name: $name
EOF

cat > /output/cluster.yaml <<EOF
apiVersion: platform.kratix.io/v1alpha1
kind: Cluster
metadata:
  name: $name
  namespace: default
  labels:
    environment: dev
spec:
  id: $name-id
  bucketPath: $name
EOF


cat > /output/job.yaml <<EOF
apiVersion: batch/v1
kind: Job
metadata:
  name: bootstrapper
  namespace: $name
spec:
  template:
    spec:
      serviceAccount: bootstrapper
      containers:
      - name: bootstrapper
        image: aclevername/vcluster-request-pipeline:v0.1.0
        command: ["sh",  "-c", "./bootstrapper"]
        env:
        - name: NAME
          value: $name
      restartPolicy: Never
  backoffLimit: 4
EOF


cat > /output/sa.yaml <<EOF
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bootstrapper
  namespace: $name
EOF

cat > /output/crb.yaml <<EOF
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: $name-bootstrapper-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin
subjects:
- kind: ServiceAccount
  name: bootstrapper
  namespace: $name
EOF
